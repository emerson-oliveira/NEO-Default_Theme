@model List<DomainCheckout.Entities.Shipping>
@if (Model != null)
{
    <div class="grouped fields display-flex flex-column align-items-start" id="GetShipping">
        @foreach (var item in Model)
        {
            if (item.ShippingMode != null)
            {
                int IdShippingMode = item.ShippingMode.IdShippingMode;
                bool DeliveredByTheCorreiosService = @item.ShippingMode.DeliveredByTheCorreiosService ? true : false;

                <div class="field">
                    <div class="ui radio checkbox ShippingValueBox">
                        <input type="radio" name="ShippingValue" value="@IdShippingMode" id="ship_@IdShippingMode" class="ShippingValue" data-correios="@string.Format("{0}", DeliveredByTheCorreiosService)" data-carrier="@item.ShippingMode.carrier" data-mode="@item.ShippingMode.mode" data-hub="@item.ShippingMode.hub" data-pickupstore="@item.ShippingMode.PickUpInStore">
                        <label class="font regular text left">
                            @if (item.ShippingMode.ScheduledDelivery)
                            {
                                @Html.Raw(item.ShippingMode.Name + " (*) - " + string.Format("{0:c}", item.ValueShipping == 0 ? "Frete Grátis" : item.ValueShipping.ToString("C")))
                                if (string.IsNullOrEmpty(item.ShippingMode.Description) == false)
                                {
                                    <small class="shippingDescription">@item.ShippingMode.Description</small>
                                }
                            }
                            else if (item.ShippingMode.DeliveryTime == null)
                            {
                                @Html.Raw(item.ShippingMode.Name + " ( Envio Imediato ) - " + string.Format(" {0:c}", item.ValueShipping == 0 ? "Frete Grátis" : item.ValueShipping.ToString("C")))
                            }
                            else
                            {
                                if (item.ShippingMode.PickUpInStore == true)
                                {
                                    <i class="icon map marker"></i>
                                    @Html.Raw(item.ShippingMode.Name)
                                    if (item.ShippingMode.PickUpAddress != null)
                                    {
                                        <br>
                                        <small>
                                            @Html.Raw(string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.StreetAddress)) ? item.ShippingMode.PickUpAddress.StreetAddress : "")
                                            + string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.StreetAddress) && !String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.Number)) ? ", " + item.ShippingMode.PickUpAddress.Number : ""))
                                        </small>
                                        <br>
                                        <small>
                                            @Html.Raw(string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.Neighbourhood)) ? item.ShippingMode.PickUpAddress.Neighbourhood : "")
                                            + string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.Neighbourhood) && !String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.City)) ? " - " + item.ShippingMode.PickUpAddress.City : "")
                                            + string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.City) && !String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.State)) ? " - " + item.ShippingMode.PickUpAddress.State : "")
                                            + string.Format("{0}", (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.ZipCode) && (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.Neighbourhood) || !String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.City))) ? " - " + item.ShippingMode.PickUpAddress.ZipCode : (!String.IsNullOrEmpty(item.ShippingMode.PickUpAddress.ZipCode)) ? item.ShippingMode.PickUpAddress.ZipCode : ""))
                                        </small>
                                        if (string.IsNullOrEmpty(item.ShippingMode.Description) == false)
                                        {
                                            <a href="#" class="shippingDescription modal-shipping-button-cart-b2c" data-id="@IdShippingMode">
                                                <h5> Ver mais detalhes</h5>
                                                <div class="ui modal modal-shipping-description-cart-b2c-@IdShippingMode">
                                                    <i class="icon close"></i>
                                                    <div class="content">
                                                        <div class="ui header">Mais detalhes</div>
                                                        <div class="ui divider"></div>
                                                        @item.ShippingMode.Description
                                                    </div>
                                                </div>
                                            </a>
                                        }
                                        <p class="font small text">
                                            @if (item.ShippingMode.DeliveryTime == 0)
                                            {
                                                <strong>Imediato</strong>
                                            } 
                                            else 
                                            { 
                                                <strong>
                                                    @Html.Raw(string.Format("{0}{1}", "Prazo: ", item.ShippingMode.DeliveryTime)
                                                    + string.Format("{0}", (item.ShippingMode.DeliveryTime > 1) ? " horas" : " hora"))
                                                </strong>
                                            }
                                        </p>
                                        <p class="font small text"><strong>Grátis</strong></p>
                                    }
                                }
                                else
                                {
                                    @Html.Raw(item.ShippingMode.Name + " - " + string.Format("{0:c}", item.ValueShipping == 0 ? "Frete Grátis" : item.ValueShipping.ToString("C")))
                                    if (string.IsNullOrEmpty(item.ShippingMode.Description) == false)
                                    {
                                        <small class="shippingDescription">@item.ShippingMode.Description</small>
                                    }

                                    <p class="font small text">
                                        @Html.Raw(string.Format("Previsão: {0}", (!String.IsNullOrEmpty(item.ShippingMode.DeliveryEstimateDate) ? Convert.ToDateTime(item.ShippingMode.DeliveryEstimateDate).ToString("dd/MM/yyyy") : ""))
                                        + string.Format("{0}", !String.IsNullOrEmpty(item.ShippingMode.DeliveryEstimateDate) ? " (" : "")
                                        + string.Format("{0}{1}", item.ShippingMode.DeliveryTime, item.ShippingMode.DeliveryTime > 1 ? " dias" : " dia")
                                        + string.Format(" {0}", ((bool)item.ShippingMode.UsefulDay) ? ((item.ShippingMode.DeliveryTime > 1 || item.ShippingMode.DeliveryTime == 0) ? " úteis" : " útil") : "")
                                        + string.Format("{0}", !String.IsNullOrEmpty(item.ShippingMode.DeliveryEstimateDate) ? ")" : ""))
                                    </p>
                                }
                            }
                        </label>
                    </div>
                </div>
            }

        }
        <input type="hidden" id="recalculatedRestrictedProducts" value="@Model.FirstOrDefault().RecalculatedRestrictedProducts.ToString()" />
    </div>
}
else
{
    <input type="hidden" id="recalculatedRestrictedProducts" value="true" />
    <div class="ui left aligned compact message form-message error" style="display: block;">
        <p>@Html.Raw(ViewBag.ZipMessage)</p>
    </div>
    <br>
}